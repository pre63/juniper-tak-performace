module Tak
open(Prelude, Io, Time)
include("\"memoryfree/memoryfree.h\"")
include("\"memoryfree/memoryfree.cpp\"")

let print = Io:printStr

fun println(s) = #Serial.println(s);#
fun printlnDec(s) = #Serial.println(s, DEC);#

fun mem() : int32 = (
  let ret = 0;
  #ret = freeMemory() * -1;#;
  ret
)

fun setup() =
  print("setup")

fun loop() = (
  let n = Time:now();
  let res = tak(18, 12, 6);
  let t = Time:now() - n;

  print("TIME            : ");
  println(t);

  print("RAM used (bytes): ");
  printlnDec(mem());

  println("----------------------")
)

fun tak(x: int32, y: int32, z: int32) : int32 =
  if y < x then
    tak(tak(x - 1, y, z), tak(y - 1, z, x), tak(z - 1, x, y))
  else
    z
  end
